#   Dockerfile:

# =========

# It is a text document which contains instructions for building docker image


# FROM   python:latest, pytohn:3.1.2, ubuntu:latest,  node:latest, opejdk:17.0

#	Ø Os, cpu, ram, rom
#	Ø Base platform for hosting ur website or app
#	Ø It will define a base image for ur app 

#WORKDIR:- it will create a working directory in ur container machine

#WORKDIR  /app,  /murali,  /anvesh, /shubahm,  /divya , /saha, /Abhijit 

#RUN :- it will execute commands while creating the docker image

#RUN apt-get update -y
#RUN apt-get install docker -y
#RUN apt-get install git -v
#RUN apt install mysql -y
#RUN apt install apache2 -y 

#COPY:- it will copy all ur app src, libraries, dependencies, env and configuration files into ur container machine or container working directory 

#MAINTAINER :- it will specify the author / owner of the dockerfiles 

#MAINTAINER <muralisocial123@gmail.com> 

#CMD:- it will execute commands/ instructions while creating the docker container

#CMD  ["npm", "server.js"],   ["npm", "start",],   ["python", "app.py"]

#If you have multiple CMD instructions in ur Dockerfile 

#CMD  ["npm", "server.js"]
#CMD  ["npm", "start",],
#CMD  ["python", "app.py"]


#Nodejs app: - npm satrt, npm server.js,  npm app.js

#EXPOSE:-  it will expose ur app or container port number 

#EXPOSE 3000,  5000,  3130,  5150, 27017, 9000, 8080, 80

#ENTRYPOINT:- it will execute commands or instructions while creating the container 

#ENTRYPOINT ["apachectl", "-D", "FOREGROUND"]

#Dockerfile,  dockerfile



#Web servers
# ===========

#	1. Apache2 web server
#	2. Httpd web server
#	3. Nginx web server

# Has one root directory:-  /var/www/html,  80

# docker run -d --name html-login -p 80:80 <docker-image> 

# Host port number:- it will be decided by DevOps team
# Container/ app port number: it will be decided by dev team only

# commands

   11  sudo apt-get update
   12  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
   13  docker --version
   14  ls
   15  touch Dockerfile 
   16  ls
   17  touch ipl srh rcb csk mi dl kkr pbks rr lsg gt
   18  ls
   19  mkdir app
   20  ls
   21  mkdir isro
   22  ls
   23  cd app 
   24  ls
   25  touch demo web sample
   26  ls
   27  cd ..
   28  ls
   29  rm rr
   30  rm srh
   31  rm ipl
   32  ls
   33  rmdir isro
   34  ls
   35  rm csk gt dl lsg
   36  rm mi rcb pbks
   37  ls
   38  rm kkr
   39  ls
   40  rmdir app
   41  cd app
   42  ls
   43  rm -rf
   44  ls
   45  ls *
   46  rm -rf *
   47  ls
   48  cd ..
   49  ls
   50  rmdir app
   51  ls
   52  vi Dockerfile 
   53  ls
   54  vi index.html
   55  ls
   56  cat index.html 
   57  vi Dockerfile 
   58  ls
   59  cat Dockerfile 
   60  ls
   61  docker build -t login-page .
   62  docker images
   63  cat Dockerfile 
   64  docker images
   65  docker ps -a
   66  docker run -d --name html-login -p 80:80 login-page
   67  docker ps
   68  ls
   69  cat Dockerfile 
   70  history

      71  docker images
   72  ls
   73  docker build -t login-page:v2 .
   74  docker build -t login-page:v3 .
   75  docker images
   76  docker tag login-page:latest muralisocial123/login-page:latest
   77  docker images
   78  docker login
   79  docker login username
   80  service docker status
   81  docker login
   82  docker login -u muralisocial123
   83  docker images
   84  docker push muralisocial123/login-page
   85  docker pull muralisocial123/login-page:latest
   86  docker pull muralisocial123/maven-web-app:1.0
   87  docker images
   88  docker tag login-page:v2 muralisocial123/login-page:v2
   89  docker images
   90  docker push muralisocial123/login-page
   91  docker pull python:windowsservercore-ltsc2025
   92  docker images
   93  docker pull python:latest
   94  docker images
   95  docker tag python:latest muralisocial123/python:latest
   96  docker images
   97  docker push muralisocial123/python
